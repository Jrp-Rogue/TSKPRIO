import streamlit as st
import json
import os

# ğŸ“Œ Nom du fichier JSON
FICHIER_JSON = "projets.json"

# ğŸ“Œ Fonction pour sauvegarder les projets dans un fichier JSON
def sauvegarder_projets():
    try:
        with open(FICHIER_JSON, "w") as f:
            json.dump(st.session_state.projets, f, indent=4)
        st.success("Projets sauvegardÃ©s !")
    except Exception as e:
        st.error(f"Erreur lors de la sauvegarde : {e}")

# ğŸ“Œ Fonction pour charger les projets depuis un fichier JSON
def charger_projets():
    if os.path.exists(FICHIER_JSON):
        try:
            with open(FICHIER_JSON, "r") as f:
                st.session_state.projets = json.load(f)
            st.success("Projets chargÃ©s avec succÃ¨s !")
            st.rerun()
        except json.JSONDecodeError:
            st.error("Le fichier JSON est corrompu. Essayez de le supprimer et de recommencer.")
    else:
        st.warning("Aucun fichier trouvÃ©. Commencez par crÃ©er un projet.")

# ğŸ“Œ Initialisation des projets en session
if "projets" not in st.session_state:
    st.session_state.projets = {}

# ğŸ“Œ Interface utilisateur
st.title("ğŸ“‚ Gestion des Projets")

# ğŸ“Œ Charger les projets existants
if st.button("Charger les projets sauvegardÃ©s"):
    charger_projets()

# ğŸ“Œ CrÃ©ation d'un nouveau projet
nouveau_projet = st.text_input("Nom du nouveau projet")
if st.button("CrÃ©er un projet") and nouveau_projet:
    if nouveau_projet not in st.session_state.projets:
        st.session_state.projets[nouveau_projet] = []
        sauvegarder_projets()
    else:
        st.warning("Ce projet existe dÃ©jÃ .")

# ğŸ“Œ SÃ©lection d'un projet existant
projets_existants = list(st.session_state.projets.keys())
projet_selectionne = st.selectbox("SÃ©lectionnez un projet", projets_existants)

if projet_selectionne:
    st.subheader(f"Gestion des tÃ¢ches pour : {projet_selectionne}")
    
    # ğŸ“Œ Ajout d'une tÃ¢che
    nom_tache = st.text_input("Nom de la tÃ¢che")
    if st.button("Ajouter la tÃ¢che") and nom_tache:
        st.session_state.projets[projet_selectionne].append({"nom": nom_tache})
        sauvegarder_projets()
    
    # ğŸ“Œ Affichage des tÃ¢ches
    st.write("### Liste des tÃ¢ches")
    for tache in st.session_state.projets[projet_selectionne]:
        st.write(f"- {tache['nom']}")
    
    # ğŸ“Œ Supprimer une tÃ¢che
    tache_a_supprimer = st.selectbox("SÃ©lectionner une tÃ¢che Ã  supprimer", [t["nom"] for t in st.session_state.projets[projet_selectionne]])
    if st.button("Supprimer la tÃ¢che"):
        st.session_state.projets[projet_selectionne] = [t for t in st.session_state.projets[projet_selectionne] if t["nom"] != tache_a_supprimer]
        sauvegarder_projets()
        st.success("TÃ¢che supprimÃ©e.")
